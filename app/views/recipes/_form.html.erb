<%= form_for(recipe) do |f| %>
  <% new_rec = f.object.new_record? %>

  <% if recipe.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(recipe.errors.count, "error") %> prohibited this recipe from being saved:</h2>

      <ul>
      <% recipe.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.hidden_field :user_id, :value => current_user.id %>
  </div>

  <div class="field">
    <%= f.label :name %>
    <%= f.text_field :name %>
  </div>

  <div class="field">
    <%= f.label :style %>
    <%= f.select :style, options_for_select(generate_style_options, selected: recipe.style), prompt: 'Select a style' %>
  </div>

  <div class="style-stats-container" style="display: none;">
    <%= render 'style_stats'%>
  </div>

  <div class="field">
    <%= f.label :batch_volume, 'Batch Volume' %>
    <%=
      f.hidden_field :batch_volume, id: 'volume-model',
      value: (new_rec ? @current_user_pref.default_batch_volume : recipe.batch_volume),
      unit: @current_user_pref.volume
    %>
    <input type="number" id="volume-display" step="0.5" />
    <span><%= get_unit_symbol(@current_user_pref.volume) %></span>
  </div>

  <div class="field">
    <label for="lock-to-batch">Lock ingredients to batch size</label>
    <input id="lock-to-batch" type="checkbox" name="lock" value="lock"/>
  </div>

  <div class="field">
    <%= f.label :efficiency %>
    <%=
      f.text_field :efficiency, type: 'number', id: 'efficiency', min: 0, max: 100,
      value: (new_rec ? @current_user_pref.default_efficiency : recipe.efficiency )
    %> %
  </div>

  <div class="prediction-container">
    <div class="recipe-colour">
      <%= image_tag 'glass_small.png', class: 'predicted-colour', data: (new_rec ? 0 : recipe.colour) %>
    </div>

    <div class="predictions">
      <div>
        <strong>OG: </strong><span class="og-display"><%= new_rec ? '1.000' : recipe.OG %></span>
        <%= f.hidden_field :OG, class: 'og-model' %>
        <strong>FG: </strong><%= f.text_field :FG, class: 'fg-model', title: 'You may enter up to two gravity values, separated by a \'-\'. Eg: 1.009-1.012', data: 'tooltip' %>
      </div>

      <div>
        <strong>IBUs: </strong><span class="ibu-display"><%= new_rec ? '0' : recipe.IBU %></span>
        <%= f.hidden_field :IBU, class: 'ibu-model', value: (0 if new_rec) %>
        <strong>SRM: </strong><span class="srm-display"><%= new_rec ? '0' : recipe.colour %></span>
        <%= f.hidden_field :colour, class: 'srm-model' %>
        <strong>ABV: </strong><span class="abv-display"></span>%
      </div>
    </div>
  </div>

  <h3>Malts</h3>
  <div class="malt-inputs">
    <%= f.fields_for :recipe_malts do |malt| %>
      <div class="malt-input">
        <div class="field">
          <%= malt.label :malt, :value => "Malts and sugars" %>
          <%= malt.select :malt, options_for_select(options_generator(:malts)), {prompt: 'Select a malt'}, class: 'ingredient-select', data: 'malts' %>
        </div>

        <div class="field">
          <%= malt.label :quantity %>
          <%= malt.hidden_field :quantity, class: 'ingredient-qty-model', unit: @current_user_pref.weight_big %>
          <input type="number" step="0.5" min="0" class="ingredient-qty-display" data="malts" />
          <span><%= get_unit_symbol(@current_user_pref.weight_big) %></span>
          <span class="malt-percent">0</span>%
        </div>

        <div class="field">
          <%= malt.hidden_field :_destroy, :value => false, :class => 'destroy' %>
        </div>

        <div class="field">
          <%= malt.label :remove %>
          <button type="button" class="del-ingredient-btn btn">x</button>
        </div>
      </div>
    <% end %>
  </div>
  <button type="button" class="add-ingredient-btn btn" data-type="malt">+</button>

  <h3>Hops</h3>
  <div class="hop-inputs">
    <%= f.fields_for :recipe_hops do |hop| %>
      <div class="hop-input">

        <div class="field">
          <%= hop.label :hop, :value => "Hops" %>
          <%= hop.select :hop, options_for_select(options_generator(:hops)), {prompt: 'Select a hop'}, class: 'ingredient-select', data: 'hops' %>
        </div>

        <div class="field">
          <%= hop.label :boil_time %>
          <%= hop.select :boil_time, options_for_select(minutes_array), {}, class: 'boil-time', data: 'hops'  %>
        </div>

        <div class="field">
          <%= hop.label :quantity %>
          <%= hop.hidden_field :quantity, class: 'ingredient-qty-model', unit: @current_user_pref.weight_small %>
          <input type="number" step="any" min="0" class="ingredient-qty-display" data="hops" />
          <span><%= get_unit_symbol(@current_user_pref.weight_small) %></span>
          <span class="hop-ibus">0</span> IBU
        </div>

        <div class="field">
          <%= hop.hidden_field :_destroy, :value => false, :class => 'destroy' %>
        </div>

        <div class="field">
          <%= hop.label :remove %>
          <button type="button" class="del-ingredient-btn btn">x</button>
        </div>

      </div>
    <% end %>
  </div>
  <button type="button" class="add-ingredient-btn btn" data-type="hop">+</button>

  <h3>Yeast</h3>
  <div class="yeast-inputs">
    <%= f.fields_for :recipe_yeasts do |yeast| %>
      <div class="yeast-input">

        <div class="field">
          <%= yeast.label :yeast, :value => "Yeast" %>
          <%= yeast.select :yeast, options_for_select(options_generator(:yeasts)), prompt: 'Select a yeast' %>
        </div>

        <div class="field">
          <%= yeast.hidden_field :_destroy, :value => false, :class => 'destroy' %>
        </div>

        <div class="field">
          <%= yeast.label :remove %>
          <button type="button" class="del-ingredient-btn btn">x</button>
        </div>

      </div>
    <% end %>
  </div>
  <button type="button" class="add-ingredient-btn btn" data-type="yeast">+</button>

  <div class="method field">
    <%= f.label :method %>
    <%= f.text_area :method %>
  </div>

  <div class="actions">
    <%= f.submit :class => 'btn btn-primary' %>
  </div>
<% end %>
